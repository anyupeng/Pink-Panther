   http协议  是超文本传输协议，用于WWW服务器传输超文本到本地浏览器的传送协议
   三大注意点： 
        1. HTTP是无连接： 限制每次连接只处理一个请求。节省传输时间
        2.HTTP是媒体独立的：任何类型的数据都可通过HTTP发送
        3.HTTP是无状态： 对事务处理没有记忆能力

     1. 常规HTTP请求方法    
          GET   :  用于请求访问已被URL识别的资源，通过URL传参给服务器。 
          POST :  用于传输信息给服务器，主要方法类似于GET，推荐用POST。
          PUT   :  传输文件，报文主体中包含文件内容，保存到对应URL位置。
          HEAD：获取报文首部，方法类似 GET, 不返回报文主体，用于验证URL是否有效 。
          DELETE：删除文件，删除对应URL位置的文件。
          OPTIONS:  查询相应URL支持的 HTTP方法。

      2. GET与POST方法的区别
          1.   GET重点在从服务器上获取数据，POST是向服务器发送数据。
          2.   GET传输数据是通过URL，用键值对（x=value）形式，置于URL后，用 "?" 连接，如：http://127.0.0.1/Test/login.action?name=anyu$sex=nan，过程可见。   
	POST传输数据到 HTTP的post机制，将字段和对应值封存在请求时体重发送给服务器。过程用户不可见。
           3.   GET传输数据小，受限于URL长度，但效率高。
	 POST传数据大，
           4.    GET不安全，URL是可见的，可能会泄露信息。
	  POST较高的安全性。
           5.    GET方法只支持 ASCLL字符， 向服务器传输中文字符可能乱码
	  POST方法支持标准字符集，可传递中文字符。          
        
        3. HTTP请求报文与响应报文的格式。
               请求报文包含三部分：    
	   请求行：   请求方法，URL， HTTP版本信息
	   请求头：   请求首部字段
	   请求正文：data；
	响应报文包含三部分：
	    状态行：   HTTP版本，状态码，状态码原因短语
	    响应头:      相应首部字段
	    相应正文：  data

        4. 常见的HTTP相应状态码
	1xx:  指示信息，请求已接受，继续处理
	2xx：成功――请求已被成功接收，理解，接收
	3xx：重定向 -- 要完成请求必须进行更进一步的操作
	4xx：客户端错误 -- 请求有语法错误或请求无法实现
	5xx：服务器端错误 -- 服务器未能实现合理的请求。
	200：请求被正常处理。     204：请求受理但没资源可返回。
	206：客户端知识请求资源的一部分，
	301：永久性重定向            302：临时重定向
	303：与302相似功能，它希望客户端请求URL时，能通过get重定向到另外一个url上                                 304：附带条件请求不满足时返回，
	307： 临时重定向，和302相似，强制要求使用POST
	400： 请求报文语法有误，服务器无法识别。
	401： 请求需要认证。         403：请求的对应资源禁止被访问。
	404：服务器无法找到对应资源。
	500： 服务器内部错误         503： 服务器正忙

          5. HTTP1.1版本新特性
	a：默认持久链接节省通信量
	b：管线化，客户端可同时多个http请求，不用一个一个
	c： 断点续传原理

           6. 常见HTTP首部字段
	a.  通用首部字段（请求/响应 报文都会使用）
	     Date：创建报文时间。          Connection： 连接的管理
	     Cache-Control：缓存的控制  
	     Transfer-Encoding： 报文主体的传输编码方式
	b.  请求首部字段（请求报文会用到）
	     HOST:  请求资源所在的服务器    Accept：可处理的媒体类型
	     Accept-Charset： 可接受的字符集
	     Accept-Encoding： 可接受的内容编码
	     Accept-Language： 可接受的自然语言
	c.  响应首部字段（响应报文会用到）
	     Accept-Ranges：  可接受的字节范围
	     Location:  令客户端重新定向到 URL
	     server： HTTP服务器的安装信息
	d.  实体首部字段（请求/响应 报文的实体部分使用的首部字段）
	     Allow：  资源可支持的HTTP方法
	     Content-Type： 实体主类的类型
	     Content-Encoding： 实体主体适用的编码方式
	     Content-Language：实体主体的自然语言
	     Content-Length：     实体主体的字节数
	     Content-Range:         实体主体的位置范围，一般用于发出部分请求时候使用
	
           7.  https和http区别
               缺点：  http 通信使用明文不加密，内容可能被窃听
                          不验证通信放身份，可能遭到伪装。
                          无法验证保温完整性，可能被篡改。
	https 就是http + 加密处理 （一般 SSL安全通信线路）+认证+完整性保护
           8.  HTTP优化
	利用负载均衡优化 和 加速HTTP应用
	利用HTTP Cache来优化网站

           9.  http协议与服务器三次握手
	a： 客户端发送syn（TCP/IP建立连接使用的握手信号，序列号，确认号码），再进入 SYN-SEND状态，等待服务器确认
	b： 服务器收到syn（）包，必须确认客户的SYN（ack=j+1），自身发送一个SYN+ACK的包，服务器进入SYN-RECV状态
	c：  客户端收到服务器的SYN-ACK包，向服务器发送确认包ACK(ack=k+1)，此包发送完毕，客户端和服务器进入 ESTABLISHED状态，完成三次握手。

            10. HTTPS的三次握手
	HTTPS在HTTP的基础上加入了SSL协议，SSL依靠证书来验证服务器的身份，并为浏览器和服务器之间的通信加密。
	1. 客户端发起 HTTPS请求
	2. 服务端的配置
	3. 传送整数
	4. 客户端解析证书
	5. 传送加密信息
	6. 服务端解密信息
	7. 传送加密后的信息
	8. 客户端解密信息，完成三次握手
	
             11. HTTPS和HTTP的区别
	a： https协议需要到ca申请证书或者自制证书
	b： http的信息是明文，https则有安全性的SSL加密
	c： http是直接与TCP进行数据传输，https是经过SSL，端口号也不一样
	d： http连接简单，是无状态的。 https协议 由SSL+HTTP协议构成的加密传输，身份验证的网络协议。